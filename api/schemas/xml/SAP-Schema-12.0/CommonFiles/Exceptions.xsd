<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="DCLG-HIP/Exceptions" xmlns:ERR="DCLG-HIP/Exceptions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:pfdt="DCLG-HIP/BaseDataTypes" targetNamespace="DCLG-HIP/Exceptions" elementFormDefault="qualified" version="LIG-12.0">
	<!--
	© Department of Communities and Local Government. Â© Crown copyright, 2007. The Home Condition Report logo and associated wording is a registered trade mark - any unlicensed use is not permitted. Copyright in the typographical arrangement of this document rests with the Crown. This publication, excluding logos, may be reproduced free of charge in any format or medium for research, private study, for internal circulation within an organisation or by registered scheme users. This is subject to it being reproduced accurately and not used in a misleading context. 

-->
	<xs:import namespace="DCLG-HIP/BaseDataTypes" schemaLocation="../UDT/BaseDataTypes.xsd"/>
	<xs:element name="DataItem" type="DataItem"/>
	<xs:complexType name="DataItem">
		<xs:annotation>
			<xs:documentation>The Data-Item from the input XML message that caused the data exception to be raised. 

Each Data Item consists of the name of the XML Element(s) that caused the exception to be raised, the value assigned to the element and an optional reference to the individual element of there is more than one of them in the XML Message.

</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ItemName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the data-item that was in error. This is that actual name of the element as it is in the message, for example:

	&lt;MyElementName&gt;[Value]&lt;/MyElementName&gt;

would result in:

	&lt;ItemName&gt;MyElementname&lt;/DataItem&gt;

</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The full X-Path to the XML Element containing the error. 

This is required because there may be multiple data-items with the same name sometimes in separate functional components and sometimes the same functional component may occur multiple times. In both cases the Data-Item Name may not uniquely identify the actual error.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Value" type="xs:anyType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The value that was in error. 

This is an optional field because it may be the case where a mandatory data-item isn't present.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ExceptionList" type="ExceptionList"/>
	<xs:complexType name="ExceptionList">
		<xs:sequence>
			<xs:element name="Exception" type="Exception" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Exception" type="Exception"/>
	<xs:complexType name="Exception">
		<xs:sequence>
			<xs:element name="ErrorCode" type="pfdt:NumericString"/>
			<xs:element name="ErrorMessage" type="pfdt:Sentence"/>
			<xs:element name="DataItemList" type="DataItemList" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="DataItemList" type="DataItemList"/>
	<xs:complexType name="DataItemList">
		<xs:annotation>
			<xs:documentation>The set of Data-Items that were instrumental in raising the exception.

This is an aggregation point for all of the Data-Items because there may be more than one Data-Item for each exception. For example if the check is that A = B and the check fails then the values of both A and B need to be returned as the context of the exception.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DataItem" type="DataItem" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
